<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strapi on Rupak Ganguly</title>
    <link>https://rupakganguly.com/tags/strapi/</link>
    <description>Recent content in Strapi on Rupak Ganguly</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Feb 2023 22:08:42 -0500</lastBuildDate>
    
	<atom:link href="https://rupakganguly.com/tags/strapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Programmatically Manage Website Content Using Strapi CMS</title>
      <link>https://rupakganguly.com/posts/how-to-programmatically-manage-website-content-using-strapi-cms/</link>
      <pubDate>Sun, 26 Feb 2023 22:08:42 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/how-to-programmatically-manage-website-content-using-strapi-cms/</guid>
      <description>&lt;p&gt;In this Part 2 article, we will build upon the Strapi app we built in the Part 1 article &lt;a href=&#34;https://rupakganguly.com/posts/how-to-create-a-strapi-cms-app-to-manage-content/&#34;&gt;How to create a Strapi CMS app to manage content&lt;/a&gt;. But, instead of using the Strapi Dashboard Admin UI to manage content, we will take a deep dive into exploring how we can programmatically create content types, manage content, and consume the content via the Strapi CLI and APIs. We will also look at the anatomy of the Strapi app that is created and explore some of the functionalities that it provides out-of-the-box.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to create a Strapi CMS app to manage content</title>
      <link>https://rupakganguly.com/posts/how-to-create-a-strapi-cms-app-to-manage-content/</link>
      <pubDate>Sun, 19 Feb 2023 14:29:05 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/how-to-create-a-strapi-cms-app-to-manage-content/</guid>
      <description>&lt;p&gt;In this article, we will create a Strapi-powered app, to manage content using the Strapi CMS. To manage the content, we will use the Strapi Dashboard Admin UI to create the content types, create content data, set roles and permissions, and then expose the content via automatically generated APIs. Finally, we will access the APIs to retrieve the content data.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What Is Strapi Headless CMS?</title>
      <link>https://rupakganguly.com/glossary/what-is-strapi-headless-cms/</link>
      <pubDate>Wed, 18 Jan 2023 16:30:55 -0500</pubDate>
      
      <guid>https://rupakganguly.com/glossary/what-is-strapi-headless-cms/</guid>
      <description>&lt;p&gt;Strapi is an open-source headless CMS, and comes in three flavors: open-source Community Edition, self-hosted paid Enterprise Edition and fully managed Strapi Cloud. There is a marketplace for adding various integrations and plugins to enhance the base feature set.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>