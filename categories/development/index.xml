<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Rupak Ganguly</title>
    <link>https://rupakganguly.com/categories/development/</link>
    <description>Recent content in Development on Rupak Ganguly</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Feb 2025 13:53:04 -0500</lastBuildDate>
    
	<atom:link href="https://rupakganguly.com/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Habit Tracker App With Lovable AI: A Step-by-Step Tutorial</title>
      <link>https://rupakganguly.com/posts/building-a-habit-tracker-app-with-lovable-ai-a-step-by-step-tutorial/</link>
      <pubDate>Fri, 14 Feb 2025 13:53:04 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/building-a-habit-tracker-app-with-lovable-ai-a-step-by-step-tutorial/</guid>
      <description>&lt;p&gt;In this article, we&amp;rsquo;ll explore the development of a modern habit-tracking application built with Node.js. Using &lt;strong&gt;Lovable&lt;/strong&gt;, a powerful &lt;strong&gt;AI code assistant&lt;/strong&gt; platform, we&amp;rsquo;ll create a feature-rich application that combines intuitive design with practical functionality.&lt;/p&gt;

&lt;p&gt;The application showcases essential features like customizable activity scheduling, streak tracking, and a visual calendar interface. We&amp;rsquo;ll walk through the development process, from initial setup to implementing advanced features, while addressing various technical challenges and improvements along the way. We will explore the technical aspects of building an application with Lovable AI coding assistant and provide valuable insights into the development process and the final product.&lt;/p&gt;

&lt;p&gt;Through this journey, we&amp;rsquo;ll see how we used Lovable AI to combine thoughtful design, user-friendly features, and robust technical implementation to create a modern habit-tracking app.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploring V0 AI-Powered Code Assistant: Building a Flashcard App</title>
      <link>https://rupakganguly.com/posts/exploring-v0-ai-powered-code-assistant-building-a-flashcard-app/</link>
      <pubDate>Wed, 05 Feb 2025 16:41:56 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/exploring-v0-ai-powered-code-assistant-building-a-flashcard-app/</guid>
      <description>&lt;p&gt;This article documents my experience exploring V0 AI, a powerful AI-powered code assistant &amp;amp; web development tool. V0 offers a seamless development experience, allowing me to create a flashcard application from scratch using Next.js, styled with Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Through this journey, I tested various features including basic app creation, project file management, import/export functionality, and UI enhancements. The documentation covers both the successes and challenges encountered while building with V0, providing insights into its capabilities, limitations, and overall development experience.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploring AI Assistants: Building a Rails app With Cline AI and Deepseek Model</title>
      <link>https://rupakganguly.com/posts/exploring-ai-assistants-building-a-rails-app-with-cline-and-deepseek-model/</link>
      <pubDate>Fri, 31 Jan 2025 14:20:44 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/exploring-ai-assistants-building-a-rails-app-with-cline-and-deepseek-model/</guid>
      <description>&lt;p&gt;In this detailed walkthrough, we&amp;rsquo;ll explore how to build a Ruby on Rails application from scratch using Cline AI powered by the Deepseek model. We&amp;rsquo;ll examine Cline&amp;rsquo;s capabilities in planning, reasoning, and code generation while setting up a Rails app with authentication using Devise.&lt;/p&gt;

&lt;p&gt;The article provides a hands-on exploration of using Cline in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a new Rails application with specific configurations&lt;/li&gt;
&lt;li&gt;Setting up authentication using Devise&lt;/li&gt;
&lt;li&gt;Working with Cline&amp;rsquo;s Plan and Act modes&lt;/li&gt;
&lt;li&gt;Understanding Cline&amp;rsquo;s interface and cost structure&lt;/li&gt;
&lt;li&gt;Analyzing the strengths and limitations of the Deepseek model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout this journey, we&amp;rsquo;ll see how Cline handles various tasks, from basic setup to error resolution, while keeping track of costs and providing transparent feedback about its operations. Whether you&amp;rsquo;re new to Rails or an experienced developer, this exploration offers valuable insights into how AI can assist in web application development.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Practical Guide to AI Assisted Development: Enhancing a Web App With Cursor AI</title>
      <link>https://rupakganguly.com/posts/practical-guide-to-ai-assisted-development-enhancing-a-web-app-with-cursor-ai/</link>
      <pubDate>Tue, 17 Dec 2024 16:44:43 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/practical-guide-to-ai-assisted-development-enhancing-a-web-app-with-cursor-ai/</guid>
      <description>&lt;p&gt;AI-powered development tools are revolutionizing how developers write and maintain code. In this hands-on tutorial, we&amp;rsquo;ll explore how to use Cursor AI Assistant to enhance a simple Todo list application with new features and improvements. Whether you&amp;rsquo;re new to AI coding assistants or looking to level up your development workflow, this guide will show you practical examples of using Cursor AI for iterative development, debugging, and feature implementation.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll take an existing Todo list application and walk through adding new functionality like filtering, improving the UI layout, implementing a color theme, and fixing runtime errors - all with the help of Cursor AI. You&amp;rsquo;ll learn how to effectively prompt Cursor AI, review suggested changes, and validate the results. By the end, you&amp;rsquo;ll have a good understanding of how AI assistants like Cursor AI can accelerate your development process while maintaining code quality.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploring AI Assisted Development: Building a Feature Rich Web App With Bolt.new</title>
      <link>https://rupakganguly.com/posts/exploring-ai-assisted-development-building-a-feature-rich-web-app-with-bolt/</link>
      <pubDate>Tue, 10 Dec 2024 15:00:30 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/exploring-ai-assisted-development-building-a-feature-rich-web-app-with-bolt/</guid>
      <description>&lt;p&gt;In the rapidly evolving landscape of software development, AI-powered coding assistants are emerging as powerful tools for accelerating application development. This article explores the capabilities of Bolt.new, an AI coding assistant by StackBlitz, through the practical exercise of building a dynamic Todo List application using Next.js and nothing else but prompts.&lt;/p&gt;

&lt;p&gt;The demonstration showcases how Bolt.new can not only generate a basic application from scratch but also iteratively add complex features through simple prompts. We&amp;rsquo;ll examine the assistant&amp;rsquo;s ability to handle various development tasks, from implementing UI components to managing data structures, while also highlighting both its strengths and limitations.&lt;/p&gt;

&lt;p&gt;Throughout this hands-on exploration, we&amp;rsquo;ll see how Bolt.new handles different challenges, including error resolution and code refactoring, providing valuable insights into the current state of AI-assisted development and its practical applications in real-world scenarios.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building a web app using AI without the prompt engineering headaches</title>
      <link>https://rupakganguly.com/posts/building-a-web-app-using-ai-without-the-prompt-engineering-headaches/</link>
      <pubDate>Sat, 16 Nov 2024 15:12:52 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/building-a-web-app-using-ai-without-the-prompt-engineering-headaches/</guid>
      <description>&lt;p&gt;With the advent of AI chatbots, many have been using it to write code and develop apps. But, in reality (at least in my experience), it has been a huge disappointment. The technology is great but works well in the hands of people who know how to use it. A lot has been talked about ‘prompt engineering’ which is at the core of making these AI chatbots respond in a more productive way.&lt;/p&gt;

&lt;p&gt;I have tried creating apps using these AI chatbots but it is a pain. It is a nerve wreaking back and forth prompt writing in chat, and copy/paste in the code base. And, the code never works as expected. It is tough to progressively build on your app using the chatbots because the chatbots are unaware of your full code base.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Curated list of serverless resources</title>
      <link>https://rupakganguly.com/posts/curated-list-of-serverless-resources/</link>
      <pubDate>Tue, 25 Dec 2018 12:46:08 -0500</pubDate>
      
      <guid>https://rupakganguly.com/posts/curated-list-of-serverless-resources/</guid>
      <description>&lt;p&gt;A curated list of &lt;strong&gt;serverless&lt;/strong&gt; resources, applications, workshops, tutorials, newsletters, blogs, and enterprise case studies. I started this list for my own use but I thought it might be useful for others as well. This is a live document ad I will be updating the page often, so bookmark it and come back to check it for newer content. Enjoy!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to build long-running serverless apps using Lambda and AWS Fargate with Stackery</title>
      <link>https://rupakganguly.com/posts/how-to-build-long-running-serverless-apps-using-lambda-and-fargate-with-stackery/</link>
      <pubDate>Tue, 16 Oct 2018 16:09:02 -0400</pubDate>
      
      <guid>https://rupakganguly.com/posts/how-to-build-long-running-serverless-apps-using-lambda-and-fargate-with-stackery/</guid>
      <description>&lt;p&gt;This is a multi-part blog series that explores building serverless applications with Stackery. In the &lt;a href=&#34;https://rupakganguly.com/posts/building-serverless-apps-using-stackery/&#34;&gt;first part&lt;/a&gt;, we discussed why Stackery is a great platform for visually building and deploying serverless applications on AWS.&lt;/p&gt;

&lt;p&gt;The application we will build is a video processing application that will take a video file dropped into a S3 bucket, along with some user-defined parameters and extract a thumbnail of the specified frame, and store it into another S3 bucket. Since the video processing bit is a long-running process, we will use AWS Fargate to process the video.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building Serverless Apps Using Stackery</title>
      <link>https://rupakganguly.com/posts/building-serverless-apps-using-stackery/</link>
      <pubDate>Fri, 21 Sep 2018 14:52:28 -0400</pubDate>
      
      <guid>https://rupakganguly.com/posts/building-serverless-apps-using-stackery/</guid>
      <description>This is a multi-part blog series that will explore building serverless application with Stackery. In this post, the first part in the series, we discuss why Stackery is a great platform for visually building and deploying serverless applications on AWS. We will also look at setting up Stackery, linking an AWS account securely with least privileges, and using a boilerplate template to build and deploy a serverless application to AWS.</description>
    </item>
    
  </channel>
</rss>